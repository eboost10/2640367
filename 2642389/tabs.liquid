{%  if section.blocks.size > 0  %}
  <link rel="stylesheet" href="//code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
  <script src="//code.jquery.com/jquery-3.7.1.js"></script>
  <script src="//code.jquery.com/ui/1.14.1/jquery-ui.js"></script>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .tabs-content img {
    max-width: 100%;
    height: auto;
    object-fit: cover;
  }
  .ui-widget.ui-widget-content {
    border-radius: 0;
    border: none;
    display: grid;
    padding: 0;
    border: none;
    gap: 30px;
    
  }
  .ui-tabs .ui-tabs-nav li {
    opacity: 0.5;
  }

  .ui-tabs .ui-tabs-nav li.ui-tabs-active {
    opacity: 1;
  }
  .ui-tabs .ui-tabs-panel {
    padding: 0;
    font-size: 0;
    display: flex;
  }
  .ui-tabs .ui-tabs-nav {
    padding: 0;
    border-radius: 0;
    border: none;
    background: none;
    display: flex;
    flex-flow: column;
  }
  .ui-tabs .ui-tabs-nav li {
    border: none;
    background: none;
    display: flex;
    flex-flow: column;
  }
  .ui-tabs .ui-tabs-nav li a {
    cursor: pointer;
  }
  .ui-accordion .ui-accordion-content {
    width: auto;
    padding: .5em 1em;
    border-radius: 0;
    white-space: normal;
    border: none;
    
  }
  .ui-widget-header .ui-icon {
    display: none;
  }
  .ui-widget-header .h3 {
    display: flex;
    justify-content: space-between;
    color: #000;
  }
  .ui-tabs .ui-tabs-nav .ui-tabs-anchor {
    border: none;
    border-radius: 0;
    background: none;
    border-bottom: 1px solid rgba(0,0,0,0.1);
  }
  .ui-tabs .ui-tabs-nav li a {
    background: #000;
    border: none;
  }
  @media(min-width: 768px){
    .ui-tabs .ui-tabs-nav {
      grid-column: span 2 / span 2;
    }
    .ui-tabs .tabs-content {
       grid-column: span 3 / span 3;
    }
    .ui-widget.ui-widget-content {
      grid-template-columns: repeat(5,minmax(0,1fr));
      align-items: center;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient isolate">
  <div class="page-width section-{{ section.id }}-padding">
    {%- if section.settings.heading != blank -%}
      <h2 class="collage-wrapper-title inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        {{ section.settings.heading }}
      </h2>
    {%- endif -%}
    <div id="{{- section.id -}}-tabs">
      {%  assign tabs_content = '' %}
      <ul id="{{- section.id -}}-accordion">
      {%  for block in section.blocks  %}   
        <li>
          <a href="#tabs--{{- block.id -}}">
            <span class="h3">
              {{ block.settings.heading }}
              <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 17 17" fill="none">
                <path d="M5.16602 11.8337L11.8327 5.16699" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"></path>
                <path d="M5.16602 5.16699H11.8327V11.8337" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"></path>
              </svg>
            </span>
          </a>
          <div>
            {{ block.settings.content }}
            {%- if block.settings.button_label != blank -%}
              <a
                {% if block.settings.button_link == blank %}
                  role="link" aria-disabled="true"
                {% else %}
                  href="{{ block.settings.button_link }}"
                {% endif %}
                class="button button--primary"
              >
                {{- block.settings.button_label | escape -}}
              </a>
            {%- endif -%}
          </div>
        </li>
        {%  capture tab_content  %}
        <div id="tabs--{{- block.id -}}">
          {%  if block.settings.image != blank %}
            {{
              block.settings.image
              | image_url: width: 3200
              | image_tag:
                sizes: "full_width",
                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200'
            }}
          {%  else  %}
          {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
          {%  endif %}
        </div>
        {%  endcapture %} 
        {%  assign tabs_content =  tabs_content | append: tab_content %}
      {%  endfor %}
          </ul>
      <div class="tabs-content">
        {{ tabs_content }}
      </div> 
      </div>
    <script>
      $( function() {
        $("#{{- section.id -}}-tabs" ).tabs({
           event: "mouseover",
           heightStyle: "auto"
        });
        $("#{{- section.id -}}-accordion" ).accordion({
           event: "mouseover"
        });
      });
    </script>
  </div>      
</div>
{%  endif  %}
{% schema %}
{
  "name": "Tabs",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Tabs",
      "label": "Tabs Title"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "tab",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Step 1: Cleans",
          "label": "Heading"
        },
         {
          "type": "richtext",
          "id": "content",
          "label": "Content",
           "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>"
        },
        {
          "type": "text",
          "id": "button_label",
          "default": "button",
          "label": "Button Label",
          "info": "t:sections.image-banner.blocks.buttons.settings.button_label_1.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
      ]
    }
  ],
  "presets": [
    {
      "name": "Tabs",
      "blocks": [
        {
          "type": "tab"
        },
        {
          "type": "tab"
        },
        {
          "type": "tab"
        }
      ]
    }
  ]
}
{% endschema %}
